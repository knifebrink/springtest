<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress SqlResolve, SqlDialectInspection-->
<mapper namespace="com.spring.test.chapter6.mybatis.UserMapper2">

    <resultMap id="userResultMap" type="com.spring.test.chapter6.chapter6.User">
        <id property="id" column="id"/>
        <result property="userName" column="userName"/>
    </resultMap>



    <select id="selectUser" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user
    </select>

    <insert id="insertUser" parameterType = "com.spring.test.chapter6.chapter6.User" >
        insert into test_user(id, userName,count)
        values(null, #{userName}, #{count})
    </insert>



    <update id="updateUser" parameterType = "com.spring.test.chapter6.chapter6.User">
        update test_user
        SET
            userName = #{userName},
            count = #{count}
        WHERE id = #{id}
    </update>
    <select id="selectUserById" resultType="com.spring.test.chapter6.chapter6.User" parameterType="java.lang.String" >
        select * from test_user where id = #{id}
    </select>

    <!--resultMap的使用，即使没有定义映射，还是自动映射给弄进去了-->
    <select id="selectUserResultMap" resultMap="userResultMap">
        select * from test_user limit 3
    </select>

    <!--使用IF标签-->
    <select id="selectUserIf" parameterType="java.lang.Integer" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user
        <if test="id == 1">
            order by count
        </if>
        limit 3
    </select>

<!--  foreach标签测试 需要输入一个集合  -->
    <select id="selectUserForEach" parameterType="java.util.List" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user
        where id in
        <foreach collection="list"  index="index" item="item" separator="," open="(" close=")">
            #{item}+1
        </foreach>
    </select>


    <!--   测试sql 以及被引用-->
    <sql id="test_sql">
        order by id limit 3
    </sql>
    <select id="selectUserSqlInclude" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user <include refid="test_sql" />
    </select>

    <resultMap id="userInListMap" type="com.spring.test.chapter6.mybatis.UserInList">
        <id property="id" column="id"/>
        <result property="userName" column="userName"/>
        <collection property="moneyList" javaType="java.util.ArrayList" ofType="com.spring.test.chapter6.mybatis.UserMoney2">
            <id column="moneyId" property="moneyId" jdbcType="INTEGER" />
            <result column="money" property="money" jdbcType="INTEGER" />
            <result column="userId" property="userId" jdbcType="INTEGER" />
        </collection>
    </resultMap>
    <!--  测试collection  -->
    <select id="selectUserTestCollection" resultMap="userInListMap">
        select a.*,b.moneyId, b.money ,b.userId from test_user a left join test_user_money_2 b on a.id = b.userId
    </select>
    <!--  测试collection  对象中包含多个集合-->
    <resultMap id="userInListMap2" type="com.spring.test.chapter6.mybatis.UserInList">
        <id property="id" column="id"/>
        <result property="userName" column="userName"/>
        <collection property="moneyList" javaType="java.util.ArrayList" ofType="com.spring.test.chapter6.mybatis.UserMoney2">
            <id column="moneyId" property="moneyId" jdbcType="INTEGER" />
            <result column="money" property="money" jdbcType="INTEGER" />
            <result column="userId" property="userId" jdbcType="INTEGER" />
        </collection>
        <collection property="linList" javaType="java.util.List" ofType="com.spring.test.chapter6.mybatis.UserLin">
            <id column="lin_id" property="linId" jdbcType="INTEGER" />
            <result column="lin" property="lin" jdbcType="INTEGER" />
            <result column="userId" property="userId" jdbcType="INTEGER" />
        </collection>
    </resultMap>
    <select id="selectUserTestCollection2" resultMap="userInListMap2">
        select a.*,b.moneyId, b.money ,b.userId,c.*
            from test_user a
            left join test_user_money_2 b on a.id = b.userId
            left join test_user_lin c on a.id = c.userId
        order by a.id
    </select>

    <insert id="insertUserTestTrim" parameterType="com.spring.test.chapter6.chapter6.User" >
        insert into test_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName!=null">
                userName,
            </if>
            <if test="count!=0">
                count
            </if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="userName!=null">
                #{userName},
            </if>
            <if test="count!=0">
                #{count}
            </if>
        </trim>
    </insert>

    <insert id="insertUser3">
        insert into test_user_3(id, userName,count)
        values(null, #{userName}, #{count})
    </insert>

    <!--使用IF标签-->
    <select id="selectUserChooseWhen" parameterType="java.lang.Integer" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user
        <choose>
            <when test="id == 1">
                where count = 55
            </when>
            <otherwise>
                where count != 55
            </otherwise>
        </choose>
        limit 3
    </select>

    <sql id="test_sql_wit_params">
        where count = #{count}
    </sql>
    <select id="selectUserSqlIncludeWithParams" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user <include refid="test_sql_wit_params" />
    </select>

    <sql id="test_sql_wit_params_2">
        where count = ${prefix}
        <include refid="${include_target}"/>
    </sql>

    <select id="selectUserSqlIncludeWithParams2" resultType="com.spring.test.chapter6.chapter6.User">
        select * from test_user
        <include refid="test_sql_wit_params_2" >
            <property name="prefix" value="1"/>
            <property name="include_target" value="test_sql"/>
        </include>
    </select>

    <select id="countTestLongSql" resultType="java.lang.Integer">
        select count(*) from test_user where id in
        <foreach collection="list"  index="index" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
    <select id="selectTestCount" resultType="java.lang.Long">
        select count(1) from test_user where id =#{id} and userName =#{name}
    </select>

</mapper>